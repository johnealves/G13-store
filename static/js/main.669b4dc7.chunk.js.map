{"version":3,"sources":["services/api.js","actions/actionTypes.js","actions/index.js","Components/ProductCard/ProductCard.js","Components/Loading/Loading.js","Components/Categories/Categories.js","pages/Home.js","Components/CardShoppingCart/CardShoppingCart.js","pages/ShoppingCart.js","Components/CheckoutForm/CheckoutForm.js","pages/Checkout.js","Components/AvaliationForm/AvaliationForm.js","Components/PictureCardDetail/PictureCardDetail.js","Components/ProductDetailCard/ProductDetailscard.js","Components/ProductCaracter/ProductCaracter.js","pages/ProductDetails.js","Components/CounterCart/CounterCart.js","Components/Header/Header.js","App.js","serviceWorker.js","Reducers/homeProductList.js","Reducers/shoppingCart.js","Reducers/index.js","store/index.js","index.js"],"names":["getCategories","a","fetch","response","json","categories","getProductsFromCategoryAndQuery","categoryId","query","result","then","resp","catch","error","console","log","REQUEST_INITIAL_LIST","REQUEST_INITIAL_LIST_SUCCESS","SAVE_SEARCH_FIELD","SAVE_CATEGORY_FIELD","REQUEST_INITIAL_CATEGORY_API_SUCCESS","NEW_ITEM_CART","ADD_QUANTITY","requestInitialList","type","loading","requestInitialHomeList","dispatch","list","results","requestCategoryApiSuccess","requestCategoryApi","value","searchText","requestCategory","newItemCart","product","addQuantity","id","quantity","ProductCard","props","handleAdd","bind","this","addToCart","shoppingList","addQuantityCart","length","repeatItem","forEach","item","text","title","thumbnail","price","CategoryId","category_id","freeShipping","shipping","free_shipping","data-testid","className","to","pathname","search","src","alt","toLocaleString","style","currency","onClick","Component","connect","state","shoppingStore","shoppingCart","Loading","Categories","handleClick","api","data","setState","target","setCategory","map","category","htmlFor","name","homeProductList","searchTextApi","Home","renderInitialList","productList","handleCategory","exeHandleyCategory","CardShoppingCart","increaseQuantity","decreaseQuantity","totalPriceItem","setTotal","prevState","minusQuantityCart","totalItem","minusQuantity","ShoppingCart","fetchShoppingCart","total","shoppingCartList","fecthID","body","prev","CheckoutForm","Checkout","AvaliationForm","placeholder","required","cols","rows","PictureCardDetail","nextImage","prevImage","imgKey","pictures","url","ProductDeatailsCard","ProductCarateristics","attributes","value_name","ProductDetails","searchForID","match","params","addProductOnState","selectedProduct","CounterCart","quant","Header","handleKeyUp","buttonSearch","infoSearch","catecoryApi","keyCode","setSearchText","localStorage","setItem","JSON","stringify","totalQuantity","exact","onChange","onKeyUp","saveSearchField","headerRequestApi","App","path","component","render","React","Boolean","window","location","hostname","INITIAL_STATE","categoryApi","action","initialQuantity","parse","getItem","filter","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.669b4dc7.chunk.js","sourcesContent":["export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const categories = await response.json();\n  return categories;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // const response = await fetch(\n  //   `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`,\n  // );\n  // const result = await response.json();\n  const result = fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`)\n    .then((resp) => resp.json())\n    .catch((error) => console.log(error));\n  return result;\n}\n","export const REQUEST_INITIAL_LIST = 'REQUEST_INITIAL_LIST';\n\nexport const REQUEST_INITIAL_LIST_SUCCESS = 'REQUEST_INITIAL_LIST_SUCCESS';\n\nexport const SAVE_SEARCH_FIELD = 'SAVE_SEARCH_FIELD';\n\nexport const SAVE_CATEGORY_FIELD = 'SAVE_CATEGORY_FIELD';\n\nexport const REQUEST_INITIAL_CATEGORY_API_SUCCESS = 'REQUEST_INITIAL_CATEGORY_API_SUCCESS';\n\nexport const NEW_ITEM_CART = 'NEW_ITEM_CART';\n\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\n","import { getProductsFromCategoryAndQuery } from \"../services/api\"\nimport {\n  ADD_QUANTITY,\n  NEW_ITEM_CART,\n  REQUEST_INITIAL_CATEGORY_API_SUCCESS,\n  REQUEST_INITIAL_LIST,\n  REQUEST_INITIAL_LIST_SUCCESS,\n  SAVE_CATEGORY_FIELD,\n  SAVE_SEARCH_FIELD\n} from \"./actionTypes\";\n\n// Requisição Inicial\nconst requestInitialList = () => ({\n  type: REQUEST_INITIAL_LIST,\n  loading: true,\n})\n\nconst requestInitialListSuccess = (list) => ({\n  type: REQUEST_INITIAL_LIST_SUCCESS,\n  loading: false,\n  list,\n})\n\nexport const requestInitialHomeList = () => {\n  return (dispatch) => {\n    dispatch(requestInitialList());\n    return getProductsFromCategoryAndQuery('', 'ofertas')\n      .then((resp) => dispatch(requestInitialListSuccess(resp.results)));\n  }\n}\n\n// Save value of search field\n\nexport const saveSearchField = (value) => ({\n  type: SAVE_SEARCH_FIELD,\n  value,\n})\n\nexport const headerRequestApi = (category, query) => {\n  return (dispatch) => {\n    dispatch(requestInitialList())\n    return getProductsFromCategoryAndQuery(category, query)\n      .then((resp) => dispatch(requestCategoryApiSuccess(resp.results)))\n  }\n}\n\n// Save category on redux\n\nexport const requestCategory = (value) => ({\n  type: SAVE_CATEGORY_FIELD,\n  loading: true,\n  value,\n})\n\nexport const requestCategoryApiSuccess = (list) => ({\n  type: REQUEST_INITIAL_CATEGORY_API_SUCCESS,\n  loading: false,\n  list,\n})\n\nexport const requestCategoryApi = (value, searchText) => {\n  return (dispatch) => {\n    dispatch(requestCategory(value));\n    return getProductsFromCategoryAndQuery(value, searchText)\n      .then((resp) => dispatch(requestCategoryApiSuccess(resp.results)))\n  }\n}\n\n// Add new product\n\nexport const newItemCart = (product) => ({\n  type: NEW_ITEM_CART,\n  product,\n});\n\nexport const addQuantity = ({id, quantity}) => ({\n  type: ADD_QUANTITY,\n  id,\n  quantity: quantity + 1,\n})\n\nexport const minusQuantity = ({id, quantity}) => ({\n  type: ADD_QUANTITY,\n  id,\n  quantity: quantity - 1,\n})\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addQuantity, newItemCart } from '../../actions';\nimport './ProductCard.css';\n\nclass ProductCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd() {\n    const { addToCart, product, shoppingList, addQuantityCart } = this.props;\n    const { id } = product;\n    // empyt cart\n    if (shoppingList.length === 0) {\n      addToCart({\n        id,\n        quantity: 1,\n      })\n      return;\n    }\n    // repeat check\n    let repeatItem = false\n    shoppingList.forEach((item) => {\n      if (item.id === id) {\n        repeatItem = true;\n        addQuantityCart(item)\n      }\n    })\n\n    // no repeat item\n    if (!repeatItem) {\n      addToCart({\n        id,\n        quantity: 1,\n      })\n    }\n  }\n\n  render() {\n    const { product, text } = this.props;\n    const { title, thumbnail, price, category_id: CategoryId, id, shipping } = product;\n    const { free_shipping: freeShipping } = shipping;\n    return (\n      <li data-testid=\"product\" className=\"productCardContainer\">\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ {\n            pathname: `/g13-store/${CategoryId}/${id}`,\n            search: text } }\n          className=\"linkProductCard\"\n        >\n          <div className=\"product-card-img-container\">\n            <img src={ thumbnail } alt={ `foto-${title}` } />\n          </div>\n          <div>\n            { price.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) }\n          </div>\n          <h4>{ title }</h4>\n        </Link>\n        { freeShipping ? <p data-testid=\"free-shipping\">Frete gráris</p> : null }\n        <button\n          className=\"btn btn-danger\"\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          onClick={ this.handleAdd }\n        >\n          Adicionar ao carrinho\n        </button>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  shoppingList: state.shoppingStore.shoppingCart,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addToCart: (id) => dispatch(newItemCart(id)),\n  addQuantityCart: (item) => dispatch(addQuantity(item))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);\n","import React, { Component } from 'react';\nimport './Loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loadingContainer\">\n        <div className=\"spinner\" />\n        Carregando...\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport * as api from '../../services/api';\nimport './Categories.css';\nimport Loading from '../Loading/Loading';\nimport { connect } from 'react-redux';\nimport { requestCategoryApi } from '../../actions';\n\nclass Categories extends Component {\n  constructor(state) {\n    super(state);\n\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      categories: [],\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    await api.getCategories().then((data) => {\n      this.setState({ categories: data, loading: false });\n    });\n  }\n\n  handleClick({target: { value }}) {\n    const { setCategory, searchText } = this.props;\n    console.log(searchText)\n    setCategory(value, searchText)\n  }\n  render() {\n    const { categories, loading } = this.state;\n    if (loading) return <Loading />;\n    return (\n      <div className=\"wrapper-category\">\n        {categories.map((category) => (\n          (category.id !== 'MLB1540')\n            && (\n              <li key={ category.id }>\n                <label data-testid=\"category\" htmlFor={ category.id }>\n                  <input\n                    onClick={ this.handleClick }\n                    type=\"radio\"\n                    id={ category.id }\n                    name=\"selectedCategory\"\n                    value={ category.id }\n                  />\n                  {category.name}\n                </label>\n              </li>\n            )\n        ))}\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchText: state.homeProductList.searchTextApi,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCategory: (value, searchText) => dispatch(requestCategoryApi(value, searchText))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React, { Component } from 'react';\nimport ProductCard from '../Components/ProductCard/ProductCard';\nimport Categories from '../Components/Categories/Categories';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport Loading from '../Components/Loading/Loading';\nimport { requestInitialHomeList } from '../actions';\n\nclass Home extends Component {\n  componentDidMount() {\n    this.renderInitialList()\n  }\n\n  renderInitialList() {\n    const { requestInitialList } = this.props;\n    requestInitialList()\n  }\n\n  render() {\n    const { homeProductList } = this.props;\n    const { productList, loading } = homeProductList;\n    return (\n      <div className=\"App\">\n        <div className=\"left-side form-check\">\n          <ul className=\"categories-container\">\n            <label className=\"form-check-label\" htmlFor=\"allCategory\">\n              <input\n                className=\"form-check-input\"\n                id=\"allCategory\"\n                type=\"radio\"\n                name=\"selectedCategory\"\n                value=\"\"\n              />\n              Limpar filtros\n            </label>\n            <Categories handleCategory={ this.exeHandleyCategory } />\n          </ul>\n        </div>\n        <p data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n        <ul>\n          { (loading) ? <Loading /> : null }\n          {productList\n            .map((product) => (\n              <ProductCard product={product}/>\n            ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  homeProductList: state.homeProductList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestInitialList: () => dispatch(requestInitialHomeList()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addQuantity, newItemCart, minusQuantity } from '../../actions';\nimport './CardShoppingCart.css';\n\nclass CardShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n    const { quantity } = props.product;\n    this.increaseQuantity = this.increaseQuantity.bind(this);\n    this.decreaseQuantity = this.decreaseQuantity.bind(this);\n    this.totalPriceItem = this.totalPriceItem.bind(this);\n    this.state = { quantity };\n  }\n\n  increaseQuantity() {\n    const { product, shoppingList, addQuantityCart, setTotal } = this.props;\n    const { id } = product;\n    shoppingList.forEach((item) => {\n      if (item.id === id) {\n        // repeatItem = true;\n        addQuantityCart(item)\n        this.setState((prevState) => ({\n          quantity: prevState.quantity + 1\n        }))\n        this.totalPriceItem()\n      }\n    })\n    setTotal(product.price)\n  }\n\n  decreaseQuantity() {\n    const { product, shoppingList, minusQuantityCart, setTotal } = this.props;\n    const { id } = product;\n    \n    shoppingList.forEach((item) => {\n      if (item.id === id) {\n        // repeatItem = true;\n        minusQuantityCart(item)\n        this.setState((prevState) => ({\n          quantity: prevState.quantity - 1\n        }))\n        this.totalPriceItem()\n      }\n    })\n    setTotal(-product.price)\n  }\n\n  totalPriceItem() {\n    const { quantity } = this.state;\n    const { product } = this.props;\n    const { price } = product;\n    return quantity * price;\n  }\n\n  render() {\n    const { product } = this.props;\n    const { title, thumbnail, price } = product;\n    const { quantity } = this.state;\n    const totalItem = this.totalPriceItem();\n    return (\n      <li className=\"cardShoppingCartContainer\">\n        <div>\n          <img src={ thumbnail } alt={ `imagem ${title}` } />\n          <div className=\"itemCart\">\n            <h6 data-testid=\"shopping-cart-product-name\">{ title }</h6>\n            <p>\n              { price.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) }\n            </p>\n          </div>\n        </div>\n        <div className=\"quantCartControl\">\n          <div>\n            <button\n              className=\"btn\"\n              onClick={ this.decreaseQuantity }\n              data-testid=\"product-decrease-quantity\"\n              type=\"button\"\n            >\n              -\n            </button>\n            <input className=\"form-group mb-3 quantItem\" value={ quantity } />\n            <button\n              className=\"btn\"\n              onClick={ this.increaseQuantity }\n              data-testid=\"product-increase-quantity\"\n              type=\"button\"\n            >\n              +\n            </button>\n          </div>\n          <div className=\"total-price-container\">\n            <h5>Total: </h5>\n            { totalItem.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) }\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  shoppingList: state.shoppingStore.shoppingCart,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addToCart: (id) => dispatch(newItemCart(id)),\n  addQuantityCart: (item) => dispatch(addQuantity(item)),\n  minusQuantityCart: (item) => dispatch(minusQuantity(item)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardShoppingCart);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardShoppingCart from '../Components/CardShoppingCart/CardShoppingCart';\n\nclass ShoppingCart extends Component {\n  constructor() {\n    super();\n\n    this.fetchShoppingCart = this.fetchShoppingCart.bind(this);\n    this.setTotal = this.setTotal.bind(this);\n\n    this.state = {\n      item: [],\n      total: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchShoppingCart()\n  }\n\n  async fetchShoppingCart() {\n    const { shoppingCartList } = this.props;\n    shoppingCartList.forEach(async (item) => {\n      const fecthID = await fetch(`https://api.mercadolibre.com/items?ids=${item.id}`)\n      const resp = await fecthID.json();\n      const product = await resp[0].body\n      const { id, title, thumbnail, price } = product;\n      this.setState((prevState) => ({\n        item: [...prevState.item, {\n          id,\n          title,\n          thumbnail,\n          price,\n          quantity: item.quantity,\n          }],\n        total: prevState.total + (price * item.quantity)\n      }))\n    })\n  }\n\n  setTotal(value) {\n    this.setState((prev) => ({\n      total: prev.total + value\n    }))\n  }\n\n  render() {\n    const { item, total } = this.state;\n    if (item.length === 0) {\n      return (<p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>);\n    }\n    return (\n      <div>\n        <ul className=\"ulShoppingCart\">\n          { item\n            .map((product) => (\n              <CardShoppingCart\n                product={ product }\n                key={ product.id }\n                setTotal={ this.setTotal }\n              />\n            )) }\n          <li className=\"cardShoppingCartContainer\">\n            <h5>Total do carrinho</h5>\n            <div>\n              { total.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) }\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n shoppingCartList: state.shoppingStore.shoppingCart,\n});\n\nexport default connect(mapStateToProps)(ShoppingCart);\n","import React, { Component } from 'react';\nimport './CheckoutForm.css';\n\nclass CheckoutForm extends Component {\n  render() {\n    return (\n      <form className=\"checkout-form\">\n        <label htmlFor=\"checkout-fullname\">\n          Nome completo\n          <input data-testid=\"checkout-fullname\" id=\"checkout-fullname\" type=\"text\" />\n        </label>\n        <label htmlFor=\"checkout-email\">\n          Email\n          <input data-testid=\"checkout-email\" id=\"checkout-email\" type=\"text\" />\n        </label>\n        <label htmlFor=\"checkout-cpf\">\n          CPF\n          <input data-testid=\"checkout-cpf\" id=\"checkout-cpf\" type=\"text\" />\n        </label>\n        <label htmlFor=\"checkout-phone\">\n          Telefone\n          <input data-testid=\"checkout-phone\" id=\"checkout-phone\" type=\"text\" />\n        </label>\n        <label htmlFor=\"checkout-cep\">\n          CEP\n          <input data-testid=\"checkout-cep\" id=\"checkout-cep\" type=\"text\" />\n        </label>\n        <label htmlFor=\"checkout-address\">\n          Endereço\n          <input data-testid=\"checkout-address\" id=\"checkout-address\" type=\"text\" />\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default CheckoutForm;\n","import React, { Component } from 'react';\nimport CheckoutForm from '../Components/CheckoutForm/CheckoutForm';\n\nclass Checkout extends Component {\n  render() {\n    return (\n      <CheckoutForm />\n    );\n  }\n}\n\nexport default Checkout;\n","import React, { Component } from 'react';\nimport './AvaliationForm.css';\n\nclass AvaliationForm extends Component {\n  render() {\n    return (\n      <div>\n        <form className=\"avaliationFormContainer\">\n          <fieldset>\n            <legend>Avaliação</legend>\n            <div className=\"input-group mb-3\">\n              <input\n                className=\"form-control avaliation-input\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n              />\n            </div>\n            <div>\n              <textarea\n                className=\"form-control mb-3\"\n                placeholder=\"Mensagem (opcional)\"\n                cols=\"50\"\n                rows=\"5\"\n                data-testid=\"product-detail-evaluation\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Avaliar\n            </button>\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AvaliationForm;\n","import React, { Component } from 'react';\nimport { GrPrevious, GrNext } from 'react-icons/gr';\nimport './PictureCardDetail.css';\n\nclass PictureCardDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextImage = this.nextImage.bind(this);\n    this.prevImage = this.prevImage.bind(this);\n\n    this.state = {\n      imgKey: 0,\n    };\n  }\n\n  nextImage() {\n    const { pictures } = this.props;\n    const { imgKey } = this.state;\n    if (imgKey < (pictures.length - 1)) {\n      this.setState({ imgKey: imgKey + 1 });\n    } else {\n      this.setState({ imgKey: 0 });\n    }\n  }\n\n  prevImage() {\n    const { pictures } = this.props;\n    const { imgKey } = this.state;\n    if (imgKey > 0) {\n      this.setState({ imgKey: imgKey - 1 });\n    } else {\n      this.setState({ imgKey: (pictures.length - 1) });\n    }\n  }\n\n  render() {\n    const { pictures, title } = this.props;\n    const { imgKey } = this.state;\n    return (\n      <div className=\"productContanerDetail\">\n        <button type=\"button\" className=\"changePictureButton\" onClick={ this.prevImage }>\n          <GrPrevious />\n        </button>\n        { pictures\n          .map(({ url, id }) => (<img\n            src={ url }\n            alt={ `${title}` }\n            key={ id }\n          />))[imgKey]}\n        <button\n          type=\"button\"\n          className=\"changePictureButton\"\n          onClick={ this.nextImage }\n        >\n          <GrNext />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PictureCardDetail;\n","import React, { Component } from 'react';\n// import ButtonsCardDetails from '../ButtonsCardDetails/ButtonsCardDetails';\nimport { Link } from 'react-router-dom';\nimport PictureCardDetail from '../PictureCardDetail/PictureCardDetail';\nimport './ProductDetails.css';\nimport { connect } from 'react-redux';\nimport { addQuantity, newItemCart } from '../../actions';\n\nclass ProductDeatailsCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd() {\n    const { addToCart, product, shoppingList, addQuantityCart } = this.props;\n    const { id } = product;\n    // empyt cart\n    if (shoppingList.length === 0) {\n      addToCart({\n        id,\n        quantity: 1,\n      })\n      return;\n    }\n    // repeat check\n    let repeatItem = false\n    shoppingList.forEach((item) => {\n      if (item.id === id) {\n        repeatItem = true;\n        addQuantityCart(item)\n      }\n    })\n\n    // no repeat item\n    if (!repeatItem) {\n      addToCart({\n        id,\n        quantity: 1,\n      })\n    }\n  }\n\n  render() {\n    const { product } = this.props;\n    const { title, price, pictures } = product;\n    return (\n      <div data-testid=\"product-detail-name\" className=\"productContainer\">\n        <PictureCardDetail pictures={ pictures } title={ title } />\n        <div className=\"titleDetails\">\n          <h3>{ title }</h3>\n          <h4>\n            { price.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) }\n          </h4>\n          {/* <ButtonsCardDetails product={ product } /> */}\n          <Link to=\"/g13-store/ShoppingCart\">\n            <button\n              className=\"btn btn-danger detailsToAddCart\"\n              type=\"button\"\n              data-testid=\"product-detail-add-to-cart\"\n              onClick={ this.handleAdd }\n            >\n              Comprar Agora\n            </button>\n          </Link>\n          <button\n            className=\"btn btn-outline-danger detailsToAddCart\"\n            type=\"button\"\n            data-testid=\"product-detail-add-to-cart\"\n            onClick={ this.handleAdd }\n          >\n            Adicionar ao carrinho\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  shoppingList: state.shoppingStore.shoppingCart,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addToCart: (id) => dispatch(newItemCart(id)),\n  addQuantityCart: (item) => dispatch(addQuantity(item))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDeatailsCard);\n","import React, { Component } from 'react';\nimport './ProductCaracter.css';\n\nclass ProductCarateristics extends Component {\n  render() {\n    const { product } = this.props;\n    return (\n      <table className=\"table-container\">\n        { product.attributes\n          .map(({ id, name, value_name: value }) => (\n            <tr key={ id }>\n              <th>{ name }</th>\n              <td>{ value }</td>\n            </tr>\n          )) }\n      </table>\n    );\n  }\n}\n\nexport default ProductCarateristics;\n","import React, { Component } from 'react';\nimport Loading from '../Components/Loading/Loading';\nimport '../Components/ProductDetailCard/ProductDetails.css';\nimport AvaliationForm from '../Components/AvaliationForm/AvaliationForm';\nimport ProductDeatailsCard from '../Components/ProductDetailCard/ProductDetailscard';\nimport ProductCarateristics from '../Components/ProductCaracter/ProductCaracter';\n\nexport default class ProductDetails extends Component {\n  constructor(state) {\n    super(state);\n\n    this.searchForID = this.searchForID.bind(this);\n\n    this.state = {\n      product: {},\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    this.searchForID(id);\n  }\n\n  searchForID(id) {\n    fetch(`https://api.mercadolibre.com/items?ids=${id}`)\n      .then((resp) => resp.json())\n      .then((result) => this.addProductOnState(result[0].body));\n  }\n\n  addProductOnState(selectedProduct) {\n    this.setState({ product: selectedProduct, loading: false });\n  }\n\n  render() {\n    const { product, loading } = this.state;\n    return (\n      <div>\n        { (loading)\n          ? <Loading />\n          : (\n            <>\n              <ProductDeatailsCard product={ product } />\n              <div className=\"table-structure\">\n                <h3>Caracteristicas</h3>\n                <ProductCarateristics product={ product } />\n              </div>\n            </>\n          )}\n        <AvaliationForm />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './CounterCart.css';\n\nclass CounterCart extends Component {\n  render() {\n    const { quant = 0 } = this.props;\n    return (\n      <div\n        className=\"counter-cart-container\"\n        data-testid=\"shopping-cart-size\"\n      >\n        { quant }\n      </div>\n    );\n  }\n}\n\nexport default CounterCart;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { RiShoppingCartLine } from 'react-icons/ri';\nimport { IoBagCheckOutline, IoSearch } from 'react-icons/io5';\nimport CounterCart from '../CounterCart/CounterCart';\nimport './Header.css';\nimport { connect } from 'react-redux';\nimport { headerRequestApi, saveSearchField } from '../../actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  handleClick() {\n    const { buttonSearch, infoSearch } = this.props;\n    const { searchTextApi, catecoryApi } = infoSearch;\n    buttonSearch(catecoryApi, searchTextApi)\n  }\n\n  handleKeyUp({keyCode}) {\n    if (keyCode === 13) {\n      this.handleClick()\n    }\n  }\n\n  render() {\n    const { setSearchText, quantity } = this.props;\n    localStorage.setItem('shoppingCart', JSON.stringify(quantity));\n    let totalQuantity = 0\n    quantity.forEach(({ quantity }) => {\n      totalQuantity += quantity\n    })\n    return (\n      <header className=\"header-container\">\n        <h1><Link className=\"header-link-h1\" exact to=\"/g13-store\">G13 Store</Link></h1>\n        <div className=\"input-group mb-3\">\n          <input\n            className=\"form-control\"\n            id=\"searchInput\"\n            type=\"text\"\n            data-testid=\"query-input\"\n            onChange={ setSearchText }\n            onKeyUp={ this.handleKeyUp }\n          />\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"reset\"\n            onClick={ this.handleClick }\n            data-testid=\"query-button\"\n          >\n            <IoSearch />\n          </button>\n        </div>\n        <div className=\"header-link-container\">\n          <Link\n            className=\"header-link\"\n            to=\"/g13-store/ShoppingCart\"\n            data-testid=\"shopping-cart-button\"\n          >\n            <RiShoppingCartLine />\n            <CounterCart quant={ totalQuantity } />\n          </Link>\n          <Link className=\"header-link\" to=\"/g13-store/Checkout\" data-testid=\"checkout-products\">\n            <IoBagCheckOutline />\n          </Link>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  infoSearch: state.homeProductList,\n  quantity: state.shoppingStore.shoppingCart,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSearchText: ({target: {value}}) => dispatch(saveSearchField(value)),\n  buttonSearch: (category, query) => dispatch(headerRequestApi(category, query)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ShoppingCart from './pages/ShoppingCart';\nimport Checkout from './pages/Checkout';\nimport ProductDetails from './pages/ProductDetails';\nimport './App.css';\nimport Header from './Components/Header/Header';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/g13-store\" component={ Home } />\n          <Route path=\"/g13-store/ShoppingCart\" component={ ShoppingCart } />\n          <Route path=\"/g13-store/Checkout\" component={ Checkout } />\n          <Route\n            path=\"/g13-store/:category/:id\"\n            render={ (props) => (\n              <ProductDetails { ...props } />\n            ) }\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \n  REQUEST_INITIAL_CATEGORY_API_SUCCESS,\n  REQUEST_INITIAL_LIST,\n  REQUEST_INITIAL_LIST_SUCCESS,\n  SAVE_CATEGORY_FIELD,\n  SAVE_SEARCH_FIELD\n} from \"../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  productList: [],\n  searchTextApi: '',\n  categoryApi: '',\n  loading: false,\n}\n\nconst homeProductList = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_INITIAL_LIST: \n      return {\n        ...state,\n        loading: action.loading,\n      }\n    case REQUEST_INITIAL_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: action.loading,\n        productList: [...action.list]\n      }\n    case SAVE_SEARCH_FIELD:\n      return {\n        ...state,\n        searchTextApi: action.value\n      }\n    case SAVE_CATEGORY_FIELD:\n      return {\n        ...state,\n        categoryApi: action.value,\n        loading: action.loading,\n      }\n    case REQUEST_INITIAL_CATEGORY_API_SUCCESS:\n      return {\n        ...state,\n        productList: [...action.list],\n        loading: action.loading,\n      }\n    default:\n      return state\n  }\n}\n\nexport default homeProductList;","import { ADD_QUANTITY, NEW_ITEM_CART } from \"../actions/actionTypes\";\n\nconst initialQuantity = JSON.parse(localStorage.getItem('shoppingCart'))\n\nconst INITIAL_STATE = {\n  shoppingCart: [],\n}\nif (initialQuantity) {\n  INITIAL_STATE.shoppingCart = [...initialQuantity];\n}\n\nconst shoppingStore = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case NEW_ITEM_CART:\n      return {\n        ...state,\n        shoppingCart: [\n          ...state.shoppingCart,\n          action.product\n        ]\n      }\n    case ADD_QUANTITY:\n      return {\n        ...state,\n        shoppingCart: state.shoppingCart\n          .filter((item) => (item.id === action.id) ? item.quantity = action.quantity : item),\n      }\n    default:\n      return state\n  }\n}\n\nexport default shoppingStore;","import { combineReducers } from \"redux\";\nimport homeProductList from './homeProductList';\nimport shoppingStore from \"./shoppingCart\";\n\nconst rootReducers = combineReducers({ \n  homeProductList,\n  shoppingStore,\n})\n\nexport default rootReducers;","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducers from '../Reducers/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}